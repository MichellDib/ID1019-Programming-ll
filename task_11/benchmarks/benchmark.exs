
file = File.read!("data.txt")
String.split(file, "\r\n")
#tree = Huffman.tree(file)
encode = %{
  ' ' => [0, 0],
  'a' => [0, 1, 0, 0],
  'b' => [0, 1, 1, 1, 0],
  'c' => [1, 0, 1, 1, 1, 0],
  'd' => [1, 0, 1, 0, 0, 0],
  'e' => [1, 1, 1, 1],
  'f' => [1, 1, 1, 0, 1, 0],
  'g' => [0, 1, 1, 1, 1, 0, 0],
  'h' => [1, 0, 1, 0, 1],
  'i' => [1, 1, 1, 0, 0],
  'j' => [0, 1, 1, 1, 1, 1, 1, 0],
  'k' => [0, 1, 1, 1, 1, 1, 1, 1],
  'l' => [1, 0, 0, 1],
  'm' => [1, 0, 1, 0, 0, 1, 1],
  'n' => [0, 1, 0, 1],
  'o' => [1, 0, 0, 0],
  'p' => [1, 1, 1, 0, 1, 1],
  'q' => [0, 1, 1, 1, 1, 0, 1],
  'r' => [1, 1, 0, 0, 0],
  's' => [0, 1, 1, 0],
  't' => [1, 1, 0, 1],
  'u' => [1, 1, 0, 0, 1],
  'v' => [0, 1, 1, 1, 1, 1, 0, 0],
  'w' => [1, 0, 1, 1, 0],
  'x' => [1, 0, 1, 0, 0, 1, 0],
  'y' => [1, 0, 1, 1, 1, 1],
  'z' => [0, 1, 1, 1, 1, 1, 0, 1]
}
Benchee.run(%{
  "Encode" => fn -> Huffman.encode(file,encode) end,



})
